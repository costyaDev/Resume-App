{"ast":null,"code":"var _jsxFileName = \"/Users/costa84/Desktop/Proj/MernStack-Proj/books-proj/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport { Link } from \"react-router-dom\";\nimport ProfileTop from \"./ProfileTop\";\n\nconst Profile = ({\n  match: {\n    params: {\n      id\n    }\n  },\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  useEffect(() => {\n    getProfileById(id);\n    console.log();\n  }, [getProfileById, id]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Back to Profiles\"), auth.isAuthenicated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"Edit Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-grid my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/costa84/Desktop/Proj/MernStack-Proj/books-proj/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","ProfileTop","Profile","match","params","id","profile","loading","auth","console","log","isAuthenicated","user","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADH,GADQ;AAIfN,EAAAA,cAJe;AAKfO,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GALM;AAMfC,EAAAA;AANe,CAAD,KAOV;AACJb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACM,EAAD,CAAd;AACAI,IAAAA,OAAO,CAACC,GAAR;AACD,GAHQ,EAGN,CAACX,cAAD,EAAiBM,EAAjB,CAHM,CAAT;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIGC,IAAI,CAACG,cAAL,IACCH,IAAI,CAACD,OAAL,KAAiB,KADlB,IAECC,IAAI,CAACI,IAAL,CAAUC,GAAV,KAAkBP,OAAO,CAACM,IAAR,CAAaC,GAFhC,iBAGG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPN,eAWE;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEP,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CAJJ,CADF;AAuBD,CAnCD;;AAqCAJ,OAAO,CAACY,SAAR,GAAoB;AAClBf,EAAAA,cAAc,EAAEH,SAAS,CAACmB,IAAV,CAAeC,UADb;AAElBV,EAAAA,OAAO,EAAEV,SAAS,CAACqB,MAAV,CAAiBD,UAFR;AAGlBR,EAAAA,IAAI,EAAEZ,SAAS,CAACqB,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,OAAO,EAAEa,KAAK,CAACb,OADmB;AAElCE,EAAAA,IAAI,EAAEW,KAAK,CAACX;AAFsB,CAAZ,CAAxB;;AAKA,eAAeX,OAAO,CAACqB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA6CG,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport { Link } from \"react-router-dom\";\nimport ProfileTop from \"./ProfileTop\";\n\nconst Profile = ({\n  match: {\n    params: { id },\n  },\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n}) => {\n  useEffect(() => {\n    getProfileById(id);\n    console.log();\n  }, [getProfileById, id]);\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to=\"/profiles\" className=\"btn btn-light\">\n            Back to Profiles\n          </Link>\n          {auth.isAuthenicated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                Edit Profile\n              </Link>\n            )}\n          <div class=\"profile-grid my-1\">\n            <ProfileTop profile={profile} />\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}