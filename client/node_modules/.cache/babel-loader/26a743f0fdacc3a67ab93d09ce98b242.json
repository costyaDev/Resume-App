{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL } from \"../actions/types\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenicated: null,\n  loading: true,\n  user: null\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"toke\", payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenicated: true,\n        loading: false\n      };\n\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        token: null,\n        isAuthenicated: false,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/costa84/Desktop/Proj/MernStack-Proj/books-proj/client/src/reducers/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","initialState","token","localStorage","getItem","isAuthenicated","loading","user","state","action","type","payload","setItem","removeItem"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,aAA3B,QAAgD,kBAAhD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,cAAc,EAAE,IAFG;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKX,gBAAL;AACEI,MAAAA,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6BD,OAAO,CAACT,KAArC;AACA,aAAO,EACL,GAAGM,KADE;AAEL,WAAGG,OAFE;AAGLN,QAAAA,cAAc,EAAE,IAHX;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKN,aAAL;AACEG,MAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGL,KADE;AAELN,QAAAA,KAAK,EAAE,IAFF;AAGLG,QAAAA,cAAc,EAAE,KAHX;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF;AACE,aAAOE,KAAP;AAlBJ;AAoBD","sourcesContent":["import { REGISTER_SUCCESS, REGISTER_FAIL } from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenicated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"toke\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenicated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenicated: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}