{"ast":null,"code":"import axios from \"axios\"; // import { update } from \"../../../backend/models/User\";\n\nimport { setAlert } from \"./alert\";\nimport { // CLEAR_PROFILE,\nGET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE // DELETE_ACCOUNT,\n} from \"./types\"; // get current profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // create || update\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/profile\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"profile updated\" : \"profile created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // add experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/education\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete exp\n// export const deleteExp = (id) => async (dispatch) => {\n//   try {\n//     const res = await axios.delete(`/api/profile/experience/${id}`);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data,\n//     });\n//     dispatch(setAlert(\"Experience Deletet\", \"success\"));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: {\n//         msg: err.response.statusText,\n//         status: err.response.status,\n//       },\n//     });\n//   }\n// };\n// // Delete Edu\n// export const deleteEdu = (id) => async (dispatch) => {\n//   try {\n//     const res = await axios.delete(`/api/profile/education/${id}`);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data,\n//     });\n//     dispatch(setAlert(\"Education Deletet\", \"success\"));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: {\n//         msg: err.response.statusText,\n//         status: err.response.status,\n//       },\n//     });\n//   }\n// };\n// // Delete account profile\n// export const deleteAccount = () => async (dispatch) => {\n//   if (window.conform(\"Are you shure ? This will delete your Account!\")) {\n//     try {\n//       const res = await axios.delete(`/api/profile`);\n//       dispatch({\n//         type: CLEAR_PROFILE,\n//         DELETE_ACCOUNT,\n//       });\n//       dispatch(setAlert(\"Account Deletet Success\"));\n//     } catch (err) {\n//       dispatch({\n//         type: PROFILE_ERROR,\n//         payload: {\n//           msg: err.response.statusText,\n//           status: err.response.status,\n//         },\n//       });\n//     }\n//   }\n// };","map":{"version":3,"sources":["/Users/costa84/Desktop/Proj/MernStack-Proj/books-proj/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","error","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","err","errors","forEach","addExperience","put","addEducation"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n// import { update } from \"../../../backend/models/User\";\nimport { setAlert } from \"./alert\";\n\nimport {\n  // CLEAR_PROFILE,\n  GET_PROFILE,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  // DELETE_ACCOUNT,\n} from \"./types\";\n\n// get current profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status,\n      },\n    });\n  }\n};\n\n// create || update\n\nexport const createProfile = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.post(\"/api/profile\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(edit ? \"profile updated\" : \"profile created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// add experience\n\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// add Education\n\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.put(\"/api/profile/education\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Education Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete exp\n\n// export const deleteExp = (id) => async (dispatch) => {\n//   try {\n//     const res = await axios.delete(`/api/profile/experience/${id}`);\n\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data,\n//     });\n\n//     dispatch(setAlert(\"Experience Deletet\", \"success\"));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: {\n//         msg: err.response.statusText,\n//         status: err.response.status,\n//       },\n//     });\n//   }\n// };\n\n// // Delete Edu\n\n// export const deleteEdu = (id) => async (dispatch) => {\n//   try {\n//     const res = await axios.delete(`/api/profile/education/${id}`);\n\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data,\n//     });\n\n//     dispatch(setAlert(\"Education Deletet\", \"success\"));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: {\n//         msg: err.response.statusText,\n//         status: err.response.status,\n//       },\n//     });\n//   }\n// };\n\n// // Delete account profile\n\n// export const deleteAccount = () => async (dispatch) => {\n//   if (window.conform(\"Are you shure ? This will delete your Account!\")) {\n//     try {\n//       const res = await axios.delete(`/api/profile`);\n\n//       dispatch({\n//         type: CLEAR_PROFILE,\n//         DELETE_ACCOUNT,\n//       });\n\n//       dispatch(setAlert(\"Account Deletet Success\"));\n//     } catch (err) {\n//       dispatch({\n//         type: PROFILE_ERROR,\n//         payload: {\n//           msg: err.response.statusText,\n//           status: err.response.status,\n//         },\n//       });\n//     }\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}