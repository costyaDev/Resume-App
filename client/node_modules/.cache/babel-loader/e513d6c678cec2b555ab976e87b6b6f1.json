{"ast":null,"code":"var _jsxFileName = \"/Users/costa84/Desktop/Proj/MernStack-Proj/books-proj/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = ({\n  match: {\n    params: {\n      id\n    }\n  },\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  useEffect(() => {\n    getProfileById(id);\n    console.log();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Back\")));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/Users/costa84/Desktop/Proj/MernStack-Proj/books-proj/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","Profile","match","params","id","profile","loading","auth","console","log","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADH,GADQ;AAIfL,EAAAA,cAJe;AAKfM,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GALM;AAMfC,EAAAA;AANe,CAAD,KAOV;AACJZ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACK,EAAD,CAAd;AACAI,IAAAA,OAAO,CAACC,GAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAJJ,CADF;AAaD,CAzBD;;AA2BAL,OAAO,CAACS,SAAR,GAAoB;AAClBX,EAAAA,cAAc,EAAEH,SAAS,CAACe,IAAV,CAAeC,UADb;AAElBP,EAAAA,OAAO,EAAET,SAAS,CAACiB,MAAV,CAAiBD,UAFR;AAGlBL,EAAAA,IAAI,EAAEX,SAAS,CAACiB,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,OAAO,EAAEU,KAAK,CAACV,OADmB;AAElCE,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AAFsB,CAAZ,CAAxB;;AAKA,eAAeV,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = ({\n  match: {\n    params: { id },\n  },\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n}) => {\n  useEffect(() => {\n    getProfileById(id);\n    console.log();\n  }, []);\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to=\"/profiles\" className=\"btn btn-light\">\n            Back\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}